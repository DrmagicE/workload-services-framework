
cmake_minimum_required (VERSION 2.8...3.23)

Project(workloads NONE)
set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/script/")
include(prerequisite)

add_custom_target(bom)
add_custom_target(kpi)
enable_testing()

if(NOT DEFINED PLATFORM)
    execute_process(COMMAND bash -c "head -n 1 '${CMAKE_SOURCE_DIR}/workload/platforms'" OUTPUT_VARIABLE PLATFORM OUTPUT_STRIP_TRAILING_WHITESPACE)
else()
    execute_process(COMMAND bash -c "grep -E '^${PLATFORM}$' '${CMAKE_SOURCE_DIR}/workload/platforms' | head -n 1" OUTPUT_VARIABLE platform OUTPUT_STRIP_TRAILING_WHITESPACE)
    if(NOT platform)
        message(FATAL_ERROR "Platform ${PLATFORM} not recognized!")
    endif()
    set(PLATFORM "${platform}")
endif()

if(PLATFORM MATCHES "GRAVITON")
    set(IMAGEARCH "linux/arm64")
else()
    set(IMAGEARCH "linux/amd64")
endif()

if(REGISTRY)
    if (NOT ${REGISTRY} MATCHES "/$")
        set(REGISTRY "${REGISTRY}/")
    endif()
endif()

set(ENABLE_BUILD ON)

if (NOT DEFINED TIMEOUT)
    set(TIMEOUT "28800,600")
endif()

if (NOT DEFINED RELEASE)
    set(RELEASE ":latest")
elseif (NOT ${RELEASE} MATCHES "^:")
    set(RELEASE ":${RELEASE}")
endif()

if (NOT BACKEND)
    set(BACKEND "kubernetes")
endif()

if (EXISTS "${PROJECT_SOURCE_DIR}/script/${BACKEND}.cmake")
    include(${BACKEND})
endif()

add_subdirectory("script/march")
add_subdirectory(stack)
add_subdirectory(workload)

message("")
message("This script will build third party components licensed under various open source licenses into your container images. The terms under which those components may be used and distributed can be found with the license document that is provided with those components. Please familiarize yourself with those terms to ensure your distribution of those components complies with the terms of those licenses.")
message("")
message("-- Setting: PLATFORM=${PLATFORM}, ARCH=${IMAGEARCH}")
if(NOT DEFINED REGISTRY_AUTH)
    message("-- Setting: REGISTRY=${REGISTRY}")
else()
    message("-- Setting: REGISTRY=${REGISTRY}, AUTH=${REGISTRY_AUTH}")
endif()
message("-- Setting: RELEASE=${RELEASE}")
message("-- Setting: TIMEOUT=${TIMEOUT}")
message("-- Setting: BACKEND=${BACKEND}")
if(ACCEPT_LICENSE)
    message("-- Setting: ACCEPT_LICENSE=${ACCEPT_LICENSE}")
endif()
if(COMMAND show_backend_settings)
    show_backend_settings()
endif()
if(BENCHMARK)
    message("-- Setting: BENCHMARK=${BENCHMARK}")
endif()
if(NOT ENABLE_BUILD)
    message("")
    message("Build is disabled as ${DEFAULT_REGISTRY} is readonly.")
    message("")
endif()
message("")

execute_process(COMMAND bash -c "ln -s -r -f '${PROJECT_SOURCE_DIR}'/script/benchmark/*.sh ." WORKING_DIRECTORY "${CMAKE_BINARY_DIR}")
