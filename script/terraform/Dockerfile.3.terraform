## terraform-base

ARG RELEASE
ARG OS_VER=22.04
ARG OS_IMAGE=ubuntu

ARG DOCKER_CLI_VER=20.10.17
ARG DOCKER_CLI_IMG=docker:${DOCKER_CLI_VER}-dind
FROM ${DOCKER_CLI_IMG} as dockercli
FROM csp-common${RELEASE} as configs

FROM ${OS_IMAGE}:${OS_VER} as flamegraph
RUN  apt-get update && apt-get install -y git

ARG FLAMEGRAPH_VER=d9fcc272b6a08c3e3e5b7919040f0ab5f8952d65
ARG FLAMEGRAPH_REPO=https://github.com/brendangregg/FlameGraph.git
RUN  git clone ${FLAMEGRAPH_REPO} && \
     cd FlameGraph && \
     git checkout ${FLAMEGRAPH_VER}

FROM ${OS_IMAGE}:${OS_VER} as ansible
RUN apt-get update && apt-get install -y ansible

FROM ${OS_IMAGE}:${OS_VER}
RUN  apt-get update && apt-get install -y zip less gnupg curl gawk netcat sudo skopeo openssh-client bzip2 && apt-get clean && rm -rf /var/lib/apt/lists/*

# python3
ARG CONDA_DIR=/opt/conda
ARG CONDA_VER=Miniconda3-py39_4.12.0-Linux-x86_64.sh
ARG CONDA_REPO=https://repo.anaconda.com/miniconda
RUN curl -o ~/miniconda.sh ${CONDA_REPO}/${CONDA_VER} && bash ~/miniconda.sh -b -p ${CONDA_DIR} && rm -f ~/miniconda.sh
ENV PATH=${CONDA_DIR}/bin:$PATH

# Install terraform & packer
RUN  curl https://apt.releases.hashicorp.com/gpg | gpg --dearmor > /usr/share/keyrings/hashicorp-archive-keyring.gpg
RUN  echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(grep CODENAME /etc/lsb-release | cut -f2 -d=) main" > /etc/apt/sources.list.d/hashicorp.list
RUN  apt-get update && apt-get install -y terraform packer && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install Ansible
RUN python3 -m pip install --no-cache-dir --upgrade ansible-core
COPY --from=ansible /usr/lib/python3/dist-packages/ansible_collections/ansible/posix/plugins/callback/debug.py /opt/conda/lib/python3.9/site-packages/ansible/plugins/callback/

# Install docker CLI
COPY --from=dockercli /usr/local/bin/docker /usr/local/bin/

# Copy CSP configurations
COPY --from=configs /opt/ /opt/ 

# Copy FlameGraph utilities
COPY --from=flamegraph /FlameGraph/stackcollapse-perf.pl /usr/local/bin/
COPY --from=flamegraph /FlameGraph/flamegraph.pl /usr/local/bin/

# Validation tools
RUN python3 -m pip install --no-cache-dir --upgrade kazoo paramiko lxml

####
ARG USER=tfu
ARG GROUP=tfu
RUN groupadd -f ${GROUP} && useradd -d /home -M ${USER} -g ${GROUP}
RUN echo "${USER} ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers
RUN groupadd -f docker && usermod -aG docker tfu
####

# Install gosu
ARG GOSU_VER=1.14
ARG GOSU_REPO=https://github.com/tianon/gosu/releases/download/${GOSU_VER}/gosu-amd64
RUN curl -o /usr/local/bin/gosu -SL ${GOSU_REPO} && \
    curl -o /usr/local/bin/gosu.asc ${GOSU_REPO}.asc && \
    chmod +x /usr/local/bin/gosu

# create .ssh
RUN mkdir -p /home/.ssh /root/.ssh && chmod 700 /home/.ssh /root/.ssh

# entry point
COPY entrypoint.sh /
ENTRYPOINT [ "/entrypoint.sh" ]
WORKDIR /opt/workspace
