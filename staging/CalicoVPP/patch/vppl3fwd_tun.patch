diff --git a/src/examples/sample-plugin/sample/node.c b/src/examples/sample-plugin/sample/node.c
index a9d8b66d7..9dc5599d0 100644
--- a/src/examples/sample-plugin/sample/node.c
+++ b/src/examples/sample-plugin/sample/node.c
@@ -111,6 +111,7 @@ VLIB_NODE_FN (sample_node) (vlib_main_t * vm, vlib_node_runtime_t * node,
 	  u32 sw_if_index0, sw_if_index1;
 	  u8 tmp0[6], tmp1[6];
 	  ethernet_header_t *en0, *en1;
+	  ip4_header_t *h0, *h1;
 	  u32 bi0, bi1;
 	  vlib_buffer_t *b0, *b1;
 
@@ -146,25 +147,19 @@ VLIB_NODE_FN (sample_node) (vlib_main_t * vm, vlib_node_runtime_t * node,
 	  en1 = vlib_buffer_get_current (b1);
 
 	  /* This is not the fastest way to swap src + dst mac addresses */
-#define _(a) tmp0[a] = en0->src_address[a];
-	  foreach_mac_address_offset;
-#undef _
-#define _(a) en0->src_address[a] = en0->dst_address[a];
-	  foreach_mac_address_offset;
-#undef _
-#define _(a) en0->dst_address[a] = tmp0[a];
-	  foreach_mac_address_offset;
-#undef _
 
-#define _(a) tmp1[a] = en1->src_address[a];
-	  foreach_mac_address_offset;
-#undef _
-#define _(a) en1->src_address[a] = en1->dst_address[a];
-	  foreach_mac_address_offset;
-#undef _
-#define _(a) en1->dst_address[a] = tmp1[a];
-	  foreach_mac_address_offset;
-#undef _
+          {
+           ip4_header_t *h0 = vlib_buffer_get_current (b0);
+           u32 tmp = h0->src_address.data_u32;
+           h0->src_address.data_u32 = h0->dst_address.data_u32;
+           h0->dst_address.data_u32 = tmp;
+          }
+          {
+           ip4_header_t *h1 = vlib_buffer_get_current (b1);
+           u32 tmp = h1->src_address.data_u32;
+           h1->src_address.data_u32 = h1->dst_address.data_u32;
+           h1->dst_address.data_u32 = tmp;
+          }
 
 	  sw_if_index0 = vnet_buffer (b0)->sw_if_index[VLIB_RX];
 	  sw_if_index1 = vnet_buffer (b1)->sw_if_index[VLIB_RX];
@@ -183,10 +178,6 @@ VLIB_NODE_FN (sample_node) (vlib_main_t * vm, vlib_node_runtime_t * node,
 		    vlib_add_trace (vm, node, b0, sizeof (*t));
 		  t->sw_if_index = sw_if_index0;
 		  t->next_index = next0;
-		  clib_memcpy_fast (t->new_src_mac, en0->src_address,
-				    sizeof (t->new_src_mac));
-		  clib_memcpy_fast (t->new_dst_mac, en0->dst_address,
-				    sizeof (t->new_dst_mac));
 
 		}
 	      if (b1->flags & VLIB_BUFFER_IS_TRACED)
@@ -195,10 +186,6 @@ VLIB_NODE_FN (sample_node) (vlib_main_t * vm, vlib_node_runtime_t * node,
 		    vlib_add_trace (vm, node, b1, sizeof (*t));
 		  t->sw_if_index = sw_if_index1;
 		  t->next_index = next1;
-		  clib_memcpy_fast (t->new_src_mac, en1->src_address,
-				    sizeof (t->new_src_mac));
-		  clib_memcpy_fast (t->new_dst_mac, en1->dst_address,
-				    sizeof (t->new_dst_mac));
 		}
 	    }
 
@@ -216,6 +203,7 @@ VLIB_NODE_FN (sample_node) (vlib_main_t * vm, vlib_node_runtime_t * node,
 	  u32 sw_if_index0;
 	  u8 tmp0[6];
 	  ethernet_header_t *en0;
+	  ip4_header_t *h0;
 
 	  /* speculatively enqueue b0 to the current next frame */
 	  bi0 = from[0];
@@ -235,15 +223,14 @@ VLIB_NODE_FN (sample_node) (vlib_main_t * vm, vlib_node_runtime_t * node,
 	  en0 = vlib_buffer_get_current (b0);
 
 	  /* This is not the fastest way to swap src + dst mac addresses */
-#define _(a) tmp0[a] = en0->src_address[a];
-	  foreach_mac_address_offset;
-#undef _
-#define _(a) en0->src_address[a] = en0->dst_address[a];
-	  foreach_mac_address_offset;
-#undef _
-#define _(a) en0->dst_address[a] = tmp0[a];
-	  foreach_mac_address_offset;
-#undef _
+
+
+	  {
+           ip4_header_t *h0 = vlib_buffer_get_current (b0);
+           u32 tmp = h0->src_address.data_u32;
+           h0->src_address.data_u32 = h0->dst_address.data_u32;
+           h0->dst_address.data_u32 = tmp;
+          }
 
 	  sw_if_index0 = vnet_buffer (b0)->sw_if_index[VLIB_RX];
 
@@ -256,10 +243,6 @@ VLIB_NODE_FN (sample_node) (vlib_main_t * vm, vlib_node_runtime_t * node,
 	      sample_trace_t *t = vlib_add_trace (vm, node, b0, sizeof (*t));
 	      t->sw_if_index = sw_if_index0;
 	      t->next_index = next0;
-	      clib_memcpy_fast (t->new_src_mac, en0->src_address,
-				sizeof (t->new_src_mac));
-	      clib_memcpy_fast (t->new_dst_mac, en0->dst_address,
-				sizeof (t->new_dst_mac));
 	    }
 
 	  pkts_swapped += 1;
